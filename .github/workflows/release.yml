name: Release New Version

on:
  workflow_dispatch:
    inputs:
      changelog:
        required: true
        description: Changelog
      versionType:
        required: true
        description: Version type (major, minor, patch)
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

permissions:
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          # Define the path to cache
          path: ~/.npm
          # Define the key for caching and restoring
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # Define the restore key for cache retrieval
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies & Build
        run: npm ci && npm run build

      - name: Get Current Version
        id: get_version
        run: echo "::set-output name=version::$(npm --no-git-tag-version version ${{ github.event.inputs.versionType }})"

      - name: Increment Version and Update Changelog
        run: |
          echo "${{ github.event.inputs.changelog }}" >> CHANGELOG.md

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit Changes
        run: |
          git add .
          git commit -a -m "Release ${{ steps.get_version.outputs.version }}" -m "${{ github.event.inputs.changelog }}"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ""
          body: ${{ github.event.inputs.changelog }}
          draft: false
          prerelease: false
          tag_name: ${{ steps.get_version.outputs.version }}

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish Package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
